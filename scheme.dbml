// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table regions {
  name varchar [primary key, unique]
}

Table countryids {
  id integer [primary key, unique, increment]
  region enum
}

Table countries {
  id enum
  name varchar [unique, note: 'Can change over time']
  "short name" varchar
  abbreviation varchar
  anthem varchar [note: 'tla.mp3']
  capital varchar
}

Table flags {
  country enum [unique]
  flag varchar [unique, note: '*.png, where * = tla optionally followed by year or other specification; can change over time']
  "first season" enum
  "last season" enum [null]
}

Table driverids {
  id integer [primary key, unique, increment, note: 'Unique id']
  "date of birth" varchar
  "place of birth" varchar
  sex varchar
}

Table drivers {
  id integer [primary key, unique, increment, note: 'Driver-name-nationality combination unique id']
  driverid enum
  name varchar [note: 'Can change over time']
  nationality enum

  indexes {
    (id, name, nationality) [unique]
  }
}

Table teams {
  id integer [primary key, unique, increment]
  "year founded" varchar
  founder varchar
}

Table teams_seasons {
  season enum
  team enum
  "team name" enum [note: 'General name of the team in this season (not specific to any category)']
  "team principal" varchar [note: 'Team principal in this season (if changed during season, list all with "CHANGED")']
  "headquarters" varchar [note: 'Headquarters of the team in this season (if changed during season, list all with "CHANGED"']
}

Table motherids {
  id integer [primary key, unique, increment]
  "year founded" varchar
  "place founded" varchar
}

Table mothers {
  id enum
  name varchar [note: 'Can change over time']
  headquarters varchar [note: 'Can change over time']
}

Table marques {
  id integer [primary key, unique, increment]
  name varchar
}

Table marques_mothers {
  marque enum
  mother enum
  "first season" varchar [note: 'First season in which this combination applies']
  "last season" varchar [null, note: 'Last season in which this combination applies']

  /*indexes {
    (marque, mother, "first season", "last season") [unique]
  }*/
}

Table classes {
  name varchar [primary key, unique]
  type varchar
}

Table cars {
  id integer [primary key, unique, increment]
  "chassis name" varchar [note: 'Could theoretically change over time, normally does not']
  "year built" varchar
  notes varchar [null, note: 'Notes on whether a chassis changed owners, was destroyed, etc. (if applicable)']
}

Table seasons {
  name varchar [primary key, unique]
}

Table tracks {
  id integer [primary key, unique]
  location varchar
  lat varchar
  lon varchar
}

Table tracknames {
  id integer [unique]
  name varchar [unique]
  "long name" varchar
}

Table trackconfigs {
  id integer
  track enum
  name varchar
  length varchar

  indexes {
    (track, id) [pk]
  }
}

Table timezones {
  id integer [unique, increment]
  location enum [unique]
  "time zone" enum [note: 'Name of the time zone without DST indication']
  "dst start" enum [null, note: 'Week in which DST starts (if applicable)']
  "dst end" enum [null, note: 'Week in which DST ends (if applicable)']
  "first season" enum [note: 'First season in which this combination applies']
  "last season" enum [null, note: 'Last season in which this combination applies']
}

Table races {
  id integer [primary key, unique, increment]
  name varchar
}

Table categories {
  id integer [primary key, unique, increment]
  name varchar
  "long name" varchar
}

Table calendar {
  season enum
  category enum
  round integer
  race enum
  track enum
  config integer
  length varchar
  championships varchar
  "double points" bool
  date varchar
  time varchar
  "average temperature" varchar
  "average rainfall" varchar
}

Table entries {
  season enum
  category enum
  round enum
  carid enum
  class enum
  carno varchar
  marque enum
  model varchar
  engine varchar
  team enum
  vanityname varchar
  vanitynat enum
  driver enum
  "pq group" integer [null]
  "pq time" varchar [null]
  "pq pos" integer [null]
  "q group" integer [null]
  "q time" varchar [null]
  "q pos" integer [null]
  "grid pos" integer [null]
  finish integer [null]
  gap varchar [null, note: 'Total race time instead of gap for winner']

  indexes {
    (season, category, round, carid, carno) [unique]
  }
}

Table weather {
  track enum
  date varchar
  time varchar
  "average temperature" varchar
  "average rainfall" varchar

  indexes {
    (track, date, time) [unique]
  }
}

Ref: drivers.driverid > driverids.id
Ref: drivers.nationality > countries.name
Ref: countryids.region > regions.name
Ref: countries.id > countryids.id
Ref: flags.country > countries.name
Ref: trackconfigs.track > tracknames.name
Ref: calendar.season > seasons.name
Ref: calendar.category > categories.name
Ref: calendar.race > races.id
Ref: calendar.(track, config) > trackconfigs.(track, id)
Ref: teams_seasons.season > seasons.name
Ref: teams_seasons.team > teams.id
Ref: entries.(season, category, round) > calendar.(season, category, round)
Ref: entries.carid > cars.id
Ref: entries.class > classes.name
Ref: entries.marque > marques.id
Ref: entries.team > teams_seasons."team name"
Ref: entries.vanitynat > countries.name
Ref: entries.driver > drivers.id
Ref: marques_mothers.marque > marques.id
Ref: marques_mothers.mother > mothers.name
Ref: weather.track > tracknames.name
Ref: calendar.(track, date, time, "average temperature", "average rainfall") - weather.(track, date, time, "average temperature", "average rainfall")
Ref: tracknames.id - tracks.id
Ref: timezones.location - tracks.location
Ref: mothers.id > motherids.id
